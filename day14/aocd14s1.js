const out = `1668dd5dae5032987c19396e462cfc0e
c8331808511415076fcd070693aeac8e
973364642e1d045dae25dab208b9df43
72c79ef91586524a465345597dbbb127
5faa02ccf6548cca4c5ba916ac9b0d4d
d7f922cd56042e3bdc07ac3862163d80
05601cd8e112629f6ea0093f31e11c9b
28e12d73f9969b2612e3a0c7b78c01e9
a70ffcdfaeaf1ed1a0f0595739c7a144
e634e96818b66aeacda45ee2b9ac9e23
9d647a185e3e0bc58ae1a667c995ab68
2417811d08aac6d9c45ecd1d92399360
ea5f89ed525fad69a57149991b6f056d
585e2e126897f8bec75ac176581e5bb4
c2fe7763198960fca7a67f0b542497b6
a469da09b98ee7072d225a321ed67a1c
f6ce58371dc971af529be47daa30bd2a
79d84da3b14a77720d06c95b27311628
d91a18709aafbb515eabc669221b3a2d
c50ef9900630d7f523ea8b5711ed7a25
1cf35e60a25c870287d37b321325ad2c
c9d5c636edad438c21609636660d779e
8da67ed04dbbfcbc996baeec3004bf08
8113d88bf2d0915e182eefd2cade794a
55bab589c5c31336afbc49d2ee4b67ba
9bb7642d0ff4a1197379d9d19ce5faa7
6f89be70f4bc7abb50ef3c617766c795
d5824ec4c3722b85d447c5a4da926810
9c8f1ab2a4c75d84efac9b9bcbb988b8
4a284b5a1b8b0b683cbdf158187c00cc
cc98759502707b0a013a627de7c24ef8
3e0177e68893e5ddf0af826109903098
0f0e88cf1e97a95e2cb8b261a6753d91
eff16dc108e617777abe670f097df115
4034fd2acdf30bbc2c40b765e8774f44
d1a44f8e58651a2a561aa6bcce8416b3
78233a4446b263bfb12c4f1d475dc119
cf92cd9b045d3b6d8b7aac3b3a56c0ce
1a881d9497eeb70685cd7b014e95360c
d9c21d245a4c747d36a0b953fd2a6bfd
94af529ea9a7ac91d1fd858532eb96a7
a5f840c3b65460b3e683d24587517db6
94fa93939a7265cc0e335a8a34fdf8f3
6101b833ac1a0a81b0bdc661a017dd16
6ededb16517174d22b4552a98b7a0b94
ef86934e8e02172928e3886f202ea387
30edcfd0735bd0e1ac09a6e8d4fa647a
a1242691feb3bba8191a8223aaa38542
3341e34b7882106e693b8ca4a6ddfaa5
5d5a2e52fffb1c78a03d36d8e3f5037d
af1af6b619863b7f672016929d5c6549
19142d9ef3a17ee9cb515e7334f7fcf3
88ae85cca724a0dd34c81782969d1be8
56618f6c14272e5bea6ba62b8f86f760
5ca8682c769e6f9aa178e9fd2aa7bb56
6ed806e95bb634b882d0827040026bb1
fd2ffa015108a3a61d368958a1287274
d9b37a609f1fddb55d5dc0ae7fc7f5bb
0d2ffb724609ba051e4d6dbd00f7dcf3
7802ec0e0cd7d0ea2ce5fe06040091dd
4c0e36a2f01b7df756e5ee0332e399a1
75641a4704b403cb26574cbb58ae5b1f
13a076368b7f6f7e50effee7911ee2dd
d8929a8ddb5c0d032c8fd4779de52e82
5a126f8e28a4f0bbd6a7b539e7356627
258e1a5d94136676379ddbf9b373bc8f
e51d5e2aa75b8282c9abafe5cfbd8ba1
02872057f678437fc20540ffd5a1703c
c3460858a3d187e7dda5c61fa9c4565d
97ab7a9bf84ebe94e4a1fe181d1407ec
61e94cce5cbad8ecc3d844384b63d641
9c2139af24cc09cd1f54d7a71011023f
44f48f2170c9c887a2ef42c31e75054a
0e756b6f6b4f708b893b0656d83772df
4f85e73f2ebb347be609e0a301015236
e228dbc4e3e599704a87e3f4cffa8451
e6e8810c771f43d71848c431827f5572
4b8e83db6657e0439f8b16e04839d549
9d003652114c9a9a50f51e725bab6bf6
29720ec48b58fc9effe38d26f7baf822
95dbe4bfe476d1636b37dbfef9bef3f8
1f459f6682a3f22aef8032795d584932
f8a14fb24e6d40c00b65a0f3ea4739ae
7c33302415c0d5aaeea31ee396f8002f
109a00912767480135cf73cd44a013a1
365b1b5b091da8825cd4061663131ce7
1c0372229fa0457dff3e87ca1f46be23
689dc93069e21f369d3f70637cd6c075
6cf7405641a9f0bbfd4d414331a2ebe4
8ce13e181a1794a3a4cc9160ee8d72f9
1d00792bb6a5483a5d42aba8ed37a24a
ba1c3997fde8e35e7969f33423a67a88
2902eeeb41d39f729c90e76abdd9a91d
88396da2ca2de6f6551c6545d3a8c259
408c034df6eeadea9767d99ecb4113f3
99e31b6b7b538d7d1d7d2b189fe841b7
b761c5880ce40f78855cc9697b6f93fa
46e09c8f2ca0fb4264cc496b3b5195f5
0648b49c1c367ea374e3d9c6d3e23e16
13173946990f29e2c0742a6550cd1454
d51e9276a458afc6c3f7b5ee816391a6
02f2fee1aca583d8a09733a50d462c7b
8cbb68d67673ac4fc6b021c433e53b11
40c1c86e93c5886f2e3fe51944e15987
8a9f1170feab3834fd83fbfdb98bf295
2805dec47e380bd9737eadbb070dc577
be7f2d2dfeba41fd69bee67e0af731ba
cdb53b4742c03aeb48550aa2f3f2d033
5ba31961bc89249980076d3386b69c7d
ee91cdbad9cf3a8f9339aefdd0b34879
7eb981b09eb248ef3bbf94c668378c78
d68e0f0415a5f4239845bdc84b9b90dc
e72e2851faa48cc21b8583f43fe07ee8
54ec159c063893618bd11e0e527c841d
00d881f9afb8f48ec3a6bda8f323a9c4
a09e9743e0b89365f5e63c123ed63baa
ccc3fffc75e0e1659ccca34cc5673e3e
947ddba770929c591ab936763325e1a6
b52b92ada1290a9f6331e3cda59918e4
4451e52848702e098ba199e15b87bbf2
dbe9f80886438d5732e4d25071180beb
d91d7945318421e939cf7fe13430ee07
225d68db7d342ad372d01ea1401f4678
ed96a8bcf3f75dc8a60e7c33a6473fc7
7d4b3be050746c9113ef90642c88970f
8042983df8dc84542048e92cdceec5c9
6f17cc34a215343eb5ae4bb070794397
07952c1015b183c0a7ba19fa5cca4c6d`;

const lines = out.split('\n');
const numTable = {
	'0': 0, '1': 1, '2': 1, '3': 2, '4': 1,
	'5': 2, '6': 2, '7': 3, '8': 1, '9': 2,
	'a': 2, 'b': 3, 'c': 2, 'd': 3,
	'e': 3, 'f': 4,
	'A': 2, 'B': 3, 'C': 2, 'D': 3,
	'E': 3, 'F': 4
};

let sum = 0;
lines.map(line => {
	let words = line.trim().split('');
	words.forEach(word => {
		binval = numTable[word];
		sum += binval;		
	});
});
console.log(sum);

